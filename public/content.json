[
  {
    "id": "course-98765",
    "title": "Advanced React Development",
    "description": "Mastering the art of building scalable and efficient React applications requires a deep understanding of core concepts like hooks and the context API. React hooks, such as useState, useEffect, and useContext, empower developers to manage state, side effects, and context in functional components, simplifying code and improving performance. The context API, on the other hand, eliminates the need for prop drilling by providing a way to share data across the component tree without having to pass props manually at every level. By mastering these tools, developers can build applications that are both maintainable and efficient, offering smooth performance and better user experiences.",
    "price": 149.99,
    "isPublished": true,
    "modules": [
      {
        "id": "module-1",
        "title": "React Fundamentals",
        "courseId": "course-98765",
        "content": [
          {
            "id": "content-1",
            "title": "Introduction to React",
            "description": "Learning the basics of React involves understanding its core principles, which lay the foundation for building modern web applications. React is a JavaScript library for building user interfaces, focusing on creating reusable components. The core concepts include JSX (JavaScript XML), which allows you to write HTML-like syntax within JavaScript, and components, which can be either functional or class-based. React also introduces state and props to manage data and pass it between components. Understanding the virtual DOM, which optimizes rendering performance, is crucial. Mastering these concepts enables developers to create dynamic, responsive, and scalable user interfaces efficiently."
          },
          {
            "id": "content-2",
            "title": "React Components",
            "video": "https://www.youtube.com/watch?v=w7ejDZ8SWv8"
          },
          {
            "id": "content-3",
            "title": "State Management with React",
            "video": "https://www.youtube.com/watch?v=8rZ2aUjs07A"
          },
          {
            "id": "content-4",
            "title": "React Router",
            "video": "https://www.youtube.com/watch?v=Law7wfdg_ls"
          },
          {
            "id": "content-10",
            "title": "Quiz on React Basics",
            "quiz": [
              {
                "id": "quiz-1",
                "question": "What does JSX stand for in React?",
                "options": [
                  "JavaScript Syntax Extension",
                  "JavaScript XML",
                  "Java Syntax Extension",
                  "None of the above"
                ],
                "correctAnswer": 0
              },
              {
                "id": "quiz-2",
                "question": "What is the purpose of useState hook in React?",
                "options": [
                  "Managing states in a component",
                  "Handling component lifecycle",
                  "Handling events",
                  "None of the above"
                ],
                "correctAnswer": 0
              }
            ]
          }
        ]
      }
    ],
    "student": [
      {
        "id": "student-1",
        "name": "John Doe",
        "email": "john.doe@example.com",
        "enrolledCourses": ["course-98765"]
      }
    ],
    "payment": [
      {
        "id": "payment-123",
        "studentId": "student-1",
        "amount": 149.99,
        "date": "2025-02-25",
        "status": "Completed"
      }
    ]
  },
  {
    "id": "course-11223",
    "title": "Node.js for Beginners",
    "description": "Learning the fundamentals of Node.js is essential for backend development, as it enables you to build fast, scalable server-side applications using JavaScript. Node.js is built on Chrome's V8 JavaScript engine, allowing non-blocking, event-driven architectures. Express.js, a lightweight web application framework for Node.js, simplifies the routing and handling of HTTP requests. MongoDB, a NoSQL database, integrates well with Node.js for storing and managing unstructured data. By mastering these technologies, you can build robust APIs, manage databases efficiently, and create full-stack web applications. Understanding Node.js, Express, and MongoDB is key to becoming a proficient backend developer.",
    "price": 79.99,
    "isPublished": true,
    "modules": [
      {
        "id": "module-1",
        "title": "Node.js Basics",
        "courseId": "course-11223",
        "content": [
          {
            "id": "content-1",
            "title": "Introduction to Node.js",
            "description": "Node.js is a powerful JavaScript runtime built on Chrome’s V8 engine, designed for building fast and scalable server-side applications. It uses a non-blocking, event-driven architecture, making it highly efficient for handling multiple concurrent requests. Node.js is particularly suitable for I/O-heavy tasks, such as data streaming and API services, as it allows applications to process requests without waiting for other tasks to finish. With its extensive ecosystem of libraries and frameworks, like Express.js, developers can quickly set up RESTful APIs, integrate with databases, and deploy robust applications that can scale horizontally to handle growing traffic demands."
            
          },
          {
            "id": "content-2",
            "title": "Setting up a Node.js Project",
            "video": "https://www.youtube.com/watch?v=TlB_eWDSMt4"
          },
          {
            "id": "content-3",
            "title": "Understanding Express.js",
            "video": "https://www.youtube.com/watch?v=gnsO8-xJ8rs"
          },
          {
            "id": "content-10",
            "title": "Node.js Quiz",
            "quiz": [
              {
                "id": "quiz-1",
                "question": "What is the purpose of Express in Node.js?",
                "options": [
                  "Framework for building web applications",
                  "Database connection",
                  "Server-side rendering",
                  "None of the above"
                ],
                "correctAnswer": 0
              },
              {
                "id": "quiz-2",
                "question": "Which of the following is true about Node.js?",
                "options": [
                  "It runs on a single thread",
                  "It runs on multiple threads",
                  "It cannot handle file operations",
                  "None of the above"
                ],
                "correctAnswer": 0
              }
            ]
          }
        ]
      }
    ],
    "student": [
      {
        "id": "student-2",
        "name": "Jane Smith",
        "email": "jane.smith@example.com",
        "enrolledCourses": ["course-11223"]
      }
    ],
    "payment": [
      {
        "id": "payment-124",
        "studentId": "student-2",
        "amount": 79.99,
        "date": "2025-02-26",
        "status": "Completed"
      }
    ]
  },
  {
    "id": "course-87654",
    "title": "MongoDB Mastery",
    "description": "MongoDB is a leading NoSQL database designed to handle large volumes of unstructured and semi-structured data. Unlike traditional relational databases, MongoDB stores data in flexible, JSON-like documents called BSON, making it ideal for complex, hierarchical data structures. It offers high scalability, reliability, and performance, allowing developers to store and retrieve vast amounts of data quickly. MongoDB supports advanced querying, indexing, and aggregation, enabling efficient data manipulation. By mastering MongoDB, developers can build robust applications that handle everything from user data to large datasets, making it a powerful tool for modern web and mobile applications.",
    "price": 59.99,
    "isPublished": true,
    "modules": [
      {
        "id": "module-1",
        "title": "MongoDB Basics",
        "courseId": "course-87654",
        "content": [
          {
            "id": "content-1",
            "title": "Introduction to MongoDB",
            "description": "MongoDB is a NoSQL database that differs significantly from traditional SQL databases. Instead of using tables and rows, MongoDB stores data in flexible, JSON-like documents (BSON format), making it well-suited for handling unstructured or semi-structured data. This structure allows for dynamic schemas, enabling developers to store data without predefined formats. MongoDB also supports horizontal scaling, making it easier to manage large datasets by distributing them across multiple servers. Unlike SQL databases, MongoDB doesn’t rely on complex JOIN operations, offering faster read and write operations. Understanding these differences helps developers leverage MongoDB for modern, scalable applications."
          },
          {
            "id": "content-2",
            "title": "Setting up MongoDB",
            "video": "https://www.youtube.com/watch?v=-56x56UppqQ"
          },
          {
            "id": "content-3",
            "title": "CRUD Operations in MongoDB",
            "video": "https://www.youtube.com/watch?v=FwMw0BLTSQI"
          },
          {
            "id": "content-10",
            "title": "MongoDB Quiz",
            "quiz": [
              {
                "id": "quiz-1",
                "question": "What does CRUD stand for in MongoDB?",
                "options": [
                  "Create, Read, Update, Delete",
                  "Create, Replace, Undo, Delete",
                  "Check, Read, Undo, Delete",
                  "None of the above"
                ],
                "correctAnswer": 0
              },
              {
                "id": "quiz-2",
                "question": "Which is the primary data format used in MongoDB?",
                "options": ["JSON", "XML", "CSV", "None of the above"],
                "correctAnswer": 0
              }
            ]
          }
        ]
      }
    ],
    "student": [
      {
        "id": "student-3",
        "name": "Emily Johnson",
        "email": "emily.johnson@example.com",
        "enrolledCourses": ["course-87654"]
      }
    ],
    "payment": [
      {
        "id": "payment-125",
        "studentId": "student-3",
        "amount": 59.99,
        "date": "2025-02-27",
        "status": "Completed"
      }
    ]
  }
]
